name: PHPUnit Tests

on: [push, pull_request]

permissions:
  contents: read

jobs:
  tests:
    name: PHP ${{ matrix.php }} - DB ${{ matrix.db }}
    runs-on: ubuntu-22.04
    if: "!contains(github.event.head_commit.message, '[ci skip]')"

    strategy:
      fail-fast: false
      matrix:
        php: ['8.3', '8.2', '8.1', '8.0']  # Vers√µes suportadas oficialmente
        db: ['mysql', 'pgsql', 'sqlite']    # Bancos principais
        include:
          - php: '8.3'
            db: 'mysql'
          - php: '8.3'
            db: 'pgsql'

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: ci_test
        ports: ['3306:3306']
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      pgsql:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ci_test
        ports: ['5432:5432']
        options: --health-cmd=pg_isready --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, pdo_mysql, pdo_pgsql, pdo_sqlite, sqlite3
          coverage: pcov
          ini-values: date.timezone=UTC, error_reporting=E_ALL

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: php-${{ matrix.php }}-composer-${{ hashFiles('composer.lock') }}

      - name: Install dependencies
        run: composer install --no-progress --prefer-dist

      - name: Setup database
        run: |
          case "${{ matrix.db }}" in
            mysql)
              mysql -h 127.0.0.1 -u root -proot -e "CREATE DATABASE IF NOT EXISTS ci_test;"
              ;;
            pgsql)
              psql -h 127.0.0.1 -U postgres -c "CREATE DATABASE ci_test;"
              ;;
          esac

      - name: Run PHPUnit
        run: vendor/bin/phpunit --configuration tests/phpunit.xml
        env:
          DB_CONNECTION: ${{ matrix.db }}
          DB_HOST: 127.0.0.1
          DB_PORT: ${{ matrix.db == 'mysql' && '3306' || '5432' }}
          DB_DATABASE: ci_test
          DB_USERNAME: ${{ matrix.db == 'mysql' && 'root' || 'postgres' }}
          DB_PASSWORD: ${{ matrix.db == 'mysql' && 'root' || 'postgres' }}
